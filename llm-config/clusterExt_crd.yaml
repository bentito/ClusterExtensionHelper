apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.16.1"},"name":"clusterextensions.olm.operatorframework.io"},"spec":{"group":"olm.operatorframework.io","names":{"kind":"ClusterExtension","listKind":"ClusterExtensionList","plural":"clusterextensions","singular":"clusterextension"},"scope":"Cluster","versions":[{"name":"v1alpha1","schema":{"openAPIV3Schema":{"description":"ClusterExtension is the Schema for the clusterextensions API","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"ClusterExtensionSpec defines the desired state of ClusterExtension","properties":{"install":{"description":"install is a required field used to configure the installation options\nfor the ClusterExtension such as the installation namespace,\nthe service account and the pre-flight check configuration.\n\nBelow is a minimal example of an installation definition (in yaml):\ninstall:\n   namespace: example-namespace\n   serviceAccount:\n     name: example-sa","properties":{"namespace":{"description":"namespace is a reference to the Namespace in which the bundle of\ncontent for the package referenced in the packageName field will be applied.\nThe bundle may contain cluster-scoped resources or resources that are\napplied to other Namespaces. This Namespace is expected to exist.\n\nnamespace is required, immutable, and follows the DNS label standard\nas defined in [RFC 1123]. This means that valid values:\n  - Contain no more than 63 characters\n  - Contain only lowercase alphanumeric characters or '-'\n  - Start with an alphanumeric character\n  - End with an alphanumeric character\n\nSome examples of valid values are:\n  - some-namespace\n  - 123-namespace\n  - 1-namespace-2\n  - somenamespace\n\nSome examples of invalid values are:\n  - -some-namespace\n  - some-namespace-\n  - thisisareallylongnamespacenamethatisgreaterthanthemaximumlength\n  - some.namespace\n\n[RFC 1123]: https://tools.ietf.org/html/rfc1123","maxLength":63,"pattern":"^[a-z0-9]([-a-z0-9]*[a-z0-9])?$","type":"string","x-kubernetes-validations":[{"message":"namespace is immutable","rule":"self == oldSelf"}]},"preflight":{"description":"preflight is an optional field that can be used to configure the preflight checks run before installation or upgrade of the content for the package specified in the packageName field.\n\nWhen specified, it overrides the default configuration of the preflight checks that are required to execute successfully during an install/upgrade operation.\n\nWhen not specified, the default configuration for each preflight check will be used.","properties":{"crdUpgradeSafety":{"description":"crdUpgradeSafety is used to configure the CRD Upgrade Safety pre-flight\nchecks that run prior to upgrades of installed content.\n\nThe CRD Upgrade Safety pre-flight check safeguards from unintended\nconsequences of upgrading a CRD, such as data loss.\n\nThis field is required if the spec.install.preflight field is specified.","properties":{"policy":{"default":"Enabled","description":"policy is used to configure the state of the CRD Upgrade Safety pre-flight check.\n\nThis field is required when the spec.install.preflight.crdUpgradeSafety field is\nspecified.\n\nAllowed values are [\"Enabled\", \"Disabled\"]. The default value is \"Enabled\".\n\nWhen set to \"Disabled\", the CRD Upgrade Safety pre-flight check will be skipped\nwhen performing an upgrade operation. This should be used with caution as\nunintended consequences such as data loss can occur.\n\nWhen set to \"Enabled\", the CRD Upgrade Safety pre-flight check will be run when\nperforming an upgrade operation.","enum":["Enabled","Disabled"],"type":"string"}},"required":["policy"],"type":"object"}},"required":["crdUpgradeSafety"],"type":"object","x-kubernetes-validations":[{"message":"at least one of [crdUpgradeSafety] are required when preflight is specified","rule":"has(self.crdUpgradeSafety)"}]},"serviceAccount":{"description":"serviceAccount is a required reference to a ServiceAccount that exists\nin the installNamespace. The provided ServiceAccount is used to install and\nmanage the content for the package specified in the packageName field.\n\nIn order to successfully install and manage the content for the package,\nthe ServiceAccount provided via this field should be configured with the\nappropriate permissions to perform the necessary operations on all the\nresources that are included in the bundle of content being applied.","properties":{"name":{"description":"name is a required, immutable reference to the name of the ServiceAccount\nto be used for installation and management of the content for the package\nspecified in the packageName field.\n\nThis ServiceAccount is expected to exist in the installNamespace.\n\nThis field follows the DNS subdomain name standard as defined in [RFC\n1123]. This means that valid values:\n  - Contain no more than 253 characters\n  - Contain only lowercase alphanumeric characters, '-', or '.'\n  - Start with an alphanumeric character\n  - End with an alphanumeric character\n\nSome examples of valid values are:\n  - some-serviceaccount\n  - 123-serviceaccount\n  - 1-serviceaccount-2\n  - someserviceaccount\n  - some.serviceaccount\n\nSome examples of invalid values are:\n  - -some-serviceaccount\n  - some-serviceaccount-\n\n[RFC 1123]: https://tools.ietf.org/html/rfc1123","maxLength":253,"pattern":"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$","type":"string","x-kubernetes-validations":[{"message":"name is immutable","rule":"self == oldSelf"}]}},"required":["name"],"type":"object"}},"required":["namespace","serviceAccount"],"type":"object"},"source":{"description":"source is a required field which selects the installation source of content\nfor this ClusterExtension. Selection is performed by setting the sourceType.\n\nCatalog is currently the only implemented sourceType, and setting the\nsourcetype to \"Catalog\" requires the catalog field to also be defined.\n\nBelow is a minimal example of a source definition (in yaml):\n\nsource:\n  sourceType: Catalog\n  catalog:\n    packageName: example-package","properties":{"catalog":{"description":"catalog is used to configure how information is sourced from a catalog. This field must be defined when sourceType is set to \"Catalog\",\nand must be the only field defined for this sourceType.","properties":{"channels":{"description":"channels is an optional reference to a set of channels belonging to\nthe package specified in the packageName field.\n\nA \"channel\" is a package author defined stream of updates for an extension.\n\nWhen specified, it is used to constrain the set of installable bundles and\nthe automated upgrade path. This constraint is an AND operation with the\nversion field. For example:\n  - Given channel is set to \"foo\"\n  - Given version is set to \"\u003e=1.0.0, \u003c1.5.0\"\n  - Only bundles that exist in channel \"foo\" AND satisfy the version range comparison will be considered installable\n  - Automatic upgrades will be constrained to upgrade edges defined by the selected channel\n\nWhen unspecified, upgrade edges across all channels will be used to identify valid automatic upgrade paths.\n\nThis field follows the DNS subdomain name standard as defined in [RFC\n1123]. This means that valid entries:\n  - Contain no more than 253 characters\n  - Contain only lowercase alphanumeric characters, '-', or '.'\n  - Start with an alphanumeric character\n  - End with an alphanumeric character\n\nSome examples of valid values are:\n  - 1.1.x\n  - alpha\n  - stable\n  - stable-v1\n  - v1-stable\n  - dev-preview\n  - preview\n  - community\n\nSome examples of invalid values are:\n  - -some-channel\n  - some-channel-\n  - thisisareallylongchannelnamethatisgreaterthanthemaximumlength\n  - original_40\n  - --default-channel\n\n[RFC 1123]: https://tools.ietf.org/html/rfc1123","items":{"maxLength":253,"pattern":"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$","type":"string"},"type":"array"},"packageName":{"description":"packageName is a reference to the name of the package to be installed\nand is used to filter the content from catalogs.\n\nThis field is required, immutable and follows the DNS subdomain name\nstandard as defined in [RFC 1123]. This means that valid entries:\n  - Contain no more than 253 characters\n  - Contain only lowercase alphanumeric characters, '-', or '.'\n  - Start with an alphanumeric character\n  - End with an alphanumeric character\n\nSome examples of valid values are:\n  - some-package\n  - 123-package\n  - 1-package-2\n  - somepackage\n\nSome examples of invalid values are:\n  - -some-package\n  - some-package-\n  - thisisareallylongpackagenamethatisgreaterthanthemaximumlength\n  - some.package\n\n[RFC 1123]: https://tools.ietf.org/html/rfc1123","maxLength":253,"pattern":"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$","type":"string","x-kubernetes-validations":[{"message":"packageName is immutable","rule":"self == oldSelf"}]},"selector":{"description":"selector is an optional field that can be used\nto filter the set of ClusterCatalogs used in the bundle\nselection process.\n\nWhen unspecified, all ClusterCatalogs will be used in\nthe bundle selection process.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"}},"required":["key","operator"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object","x-kubernetes-map-type":"atomic"},"upgradeConstraintPolicy":{"default":"CatalogProvided","description":"upgradeConstraintPolicy is an optional field that controls whether\nthe upgrade path(s) defined in the catalog are enforced for the package\nreferenced in the packageName field.\n\nAllowed values are: [\"CatalogProvided\", \"SelfCertified\"].\n\nWhen this field is set to \"CatalogProvided\", automatic upgrades will only occur\nwhen upgrade constraints specified by the package author are met.\n\nWhen this field is set to \"SelfCertified\", the upgrade constraints specified by\nthe package author are ignored. This allows for upgrades and downgrades to\nany version of the package. This is considered a dangerous operation as it\ncan lead to unknown and potentially disastrous outcomes, such as data\nloss. It is assumed that users have independently verified changes when\nusing this option.\n\nIf unspecified, the default value is \"CatalogProvided\".","enum":["CatalogProvided","SelfCertified"],"type":"string"},"version":{"description":"version is an optional semver constraint (a specific version or range of versions). When unspecified, the latest version available will be installed.\n\nAcceptable version ranges are no longer than 64 characters.\nVersion ranges are composed of comma- or space-delimited values and one or\nmore comparison operators, known as comparison strings. Additional\ncomparison strings can be added using the OR operator (||).\n\n# Range Comparisons\n\nTo specify a version range, you can use a comparison string like \"\u003e=3.0,\n\u003c3.6\". When specifying a range, automatic updates will occur within that\nrange. The example comparison string means \"install any version greater than\nor equal to 3.0.0 but less than 3.6.0.\". It also states intent that if any\nupgrades are available within the version range after initial installation,\nthose upgrades should be automatically performed.\n\n# Pinned Versions\n\nTo specify an exact version to install you can use a version range that\n\"pins\" to a specific version. When pinning to a specific version, no\nautomatic updates will occur. An example of a pinned version range is\n\"0.6.0\", which means \"only install version 0.6.0 and never\nupgrade from this version\".\n\n# Basic Comparison Operators\n\nThe basic comparison operators and their meanings are:\n  - \"=\", equal (not aliased to an operator)\n  - \"!=\", not equal\n  - \"\u003c\", less than\n  - \"\u003e\", greater than\n  - \"\u003e=\", greater than OR equal to\n  - \"\u003c=\", less than OR equal to\n\n# Wildcard Comparisons\n\nYou can use the \"x\", \"X\", and \"*\" characters as wildcard characters in all\ncomparison operations. Some examples of using the wildcard characters:\n  - \"1.2.x\", \"1.2.X\", and \"1.2.*\" is equivalent to \"\u003e=1.2.0, \u003c 1.3.0\"\n  - \"\u003e= 1.2.x\", \"\u003e= 1.2.X\", and \"\u003e= 1.2.*\" is equivalent to \"\u003e= 1.2.0\"\n  - \"\u003c= 2.x\", \"\u003c= 2.X\", and \"\u003c= 2.*\" is equivalent to \"\u003c 3\"\n  - \"x\", \"X\", and \"*\" is equivalent to \"\u003e= 0.0.0\"\n\n# Patch Release Comparisons\n\nWhen you want to specify a minor version up to the next major version you\ncan use the \"~\" character to perform patch comparisons. Some examples:\n  - \"~1.2.3\" is equivalent to \"\u003e=1.2.3, \u003c1.3.0\"\n  - \"~1\" and \"~1.x\" is equivalent to \"\u003e=1, \u003c2\"\n  - \"~2.3\" is equivalent to \"\u003e=2.3, \u003c2.4\"\n  - \"~1.2.x\" is equivalent to \"\u003e=1.2.0, \u003c1.3.0\"\n\n# Major Release Comparisons\n\nYou can use the \"^\" character to make major release comparisons after a\nstable 1.0.0 version is published. If there is no stable version published, // minor versions define the stability level. Some examples:\n  - \"^1.2.3\" is equivalent to \"\u003e=1.2.3, \u003c2.0.0\"\n  - \"^1.2.x\" is equivalent to \"\u003e=1.2.0, \u003c2.0.0\"\n  - \"^2.3\" is equivalent to \"\u003e=2.3, \u003c3\"\n  - \"^2.x\" is equivalent to \"\u003e=2.0.0, \u003c3\"\n  - \"^0.2.3\" is equivalent to \"\u003e=0.2.3, \u003c0.3.0\"\n  - \"^0.2\" is equivalent to \"\u003e=0.2.0, \u003c0.3.0\"\n  - \"^0.0.3\" is equvalent to \"\u003e=0.0.3, \u003c0.0.4\"\n  - \"^0.0\" is equivalent to \"\u003e=0.0.0, \u003c0.1.0\"\n  - \"^0\" is equivalent to \"\u003e=0.0.0, \u003c1.0.0\"\n\n# OR Comparisons\nYou can use the \"||\" character to represent an OR operation in the version\nrange. Some examples:\n  - \"\u003e=1.2.3, \u003c2.0.0 || \u003e3.0.0\"\n  - \"^0 || ^3 || ^5\"\n\nFor more information on semver, please see https://semver.org/","maxLength":64,"pattern":"^(\\s*(=||!=|\u003e|\u003c|\u003e=|=\u003e|\u003c=|=\u003c|~|~\u003e|\\^)\\s*(v?(0|[1-9]\\d*|[x|X|\\*])(\\.(0|[1-9]\\d*|x|X|\\*]))?(\\.(0|[1-9]\\d*|x|X|\\*))?(-([0-9A-Za-z\\-]+(\\.[0-9A-Za-z\\-]+)*))?(\\+([0-9A-Za-z\\-]+(\\.[0-9A-Za-z\\-]+)*))?)\\s*)((?:\\s+|,\\s*|\\s*\\|\\|\\s*)(=||!=|\u003e|\u003c|\u003e=|=\u003e|\u003c=|=\u003c|~|~\u003e|\\^)\\s*(v?(0|[1-9]\\d*|x|X|\\*])(\\.(0|[1-9]\\d*|x|X|\\*))?(\\.(0|[1-9]\\d*|x|X|\\*]))?(-([0-9A-Za-z\\-]+(\\.[0-9A-Za-z\\-]+)*))?(\\+([0-9A-Za-z\\-]+(\\.[0-9A-Za-z\\-]+)*))?)\\s*)*$","type":"string"}},"required":["packageName"],"type":"object"},"sourceType":{"description":"sourceType is a required reference to the type of install source.\n\nAllowed values are [\"Catalog\"]\n\nWhen this field is set to \"Catalog\", information for determining the appropriate\nbundle of content to install will be fetched from ClusterCatalog resources existing\non the cluster. When using the Catalog sourceType, the catalog field must also be set.","enum":["Catalog"],"type":"string"}},"required":["sourceType"],"type":"object","x-kubernetes-validations":[{"message":"sourceType Catalog requires catalog field","rule":"self.sourceType == 'Catalog' \u0026\u0026 has(self.catalog)"}]}},"required":["install","source"],"type":"object"},"status":{"description":"ClusterExtensionStatus defines the observed state of ClusterExtension.","properties":{"conditions":{"description":"conditions is a representation of the current state for this ClusterExtension.\nThe status is represented by a set of \"conditions\".\n\nEach condition is generally structured in the following format:\n  - Type: a string representation of the condition type. More or less the condition \"name\".\n  - Status: a string representation of the state of the condition. Can be one of [\"True\", \"False\", \"Unknown\"].\n  - Reason: a string representation of the reason for the current state of the condition. Typically useful for building automation around particular Type+Reason combinations.\n  - Message: a human readable message that further elaborates on the state of the condition\n\nThe global set of condition types are:\n  - \"Installed\", represents whether or not the a bundle has been installed for this ClusterExtension\n  - \"Progressing\", represents whether or not the ClusterExtension is progressing towards a new state\n\nWhen the ClusterExtension is sourced from a catalog, the following conditions are also possible:\n  - \"Deprecated\", represents an aggregation of the PackageDeprecated, ChannelDeprecated, and BundleDeprecated condition types\n  - \"PackageDeprecated\", represents whether or not the package specified in the spec.source.catalog.packageName field has been deprecated\n  - \"ChannelDeprecated\", represents whether or not any channel specified in spec.source.catalog.channels has been deprecated\n  - \"BundleDeprecated\", represents whether or not the installed bundle is deprecated\n\nThe current set of reasons are:\n  - \"Succeeded\", this reason is set on the \"Installed\" and \"Progressing\" conditions when initial installation and progressing to a new state is successful\n  - \"Failed\", this reason is set on the \"Installed\" condition when an error has occurred while performing the initial installation.\n  - \"Blocked\", this reason is set on the \"Progressing\" condition when the ClusterExtension controller has encountered an error that requires manual intervention for recovery\n  - \"Retrying\", this reason is set on the \"Progressing\" condition when the ClusterExtension controller has encountered an error that could be resolved on subsequent reconciliation attempts\n  - \"Deprecated\", this reason is set on the \"Deprecated\", \"PackageDeprecated\", \"ChannelDeprecated\", and \"BundleDeprecated\" conditions to signal that the installed package has been deprecated at the particular scope","items":{"description":"Condition contains details for one aspect of the current state of this API Resource.","properties":{"lastTransitionTime":{"description":"lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.","format":"date-time","type":"string"},"message":{"description":"message is a human readable message indicating details about the transition.\nThis may be an empty string.","maxLength":32768,"type":"string"},"observedGeneration":{"description":"observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.","format":"int64","minimum":0,"type":"integer"},"reason":{"description":"reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.","maxLength":1024,"minLength":1,"pattern":"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$","type":"string"},"status":{"description":"status of the condition, one of True, False, Unknown.","enum":["True","False","Unknown"],"type":"string"},"type":{"description":"type of condition in CamelCase or in foo.example.com/CamelCase.","maxLength":316,"pattern":"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$","type":"string"}},"required":["lastTransitionTime","message","reason","status","type"],"type":"object"},"type":"array","x-kubernetes-list-map-keys":["type"],"x-kubernetes-list-type":"map"},"install":{"properties":{"bundle":{"description":"bundle is a representation of the currently installed bundle.\n\nA \"bundle\" is a versioned set of content that represents the resources that\nneed to be applied to a cluster to install a package.","properties":{"name":{"description":"name is a required field and is a reference\nto the name of a bundle","type":"string"},"version":{"description":"version is a required field and is a reference\nto the version that this bundle represents","type":"string"}},"required":["name","version"],"type":"object"}},"required":["bundle"],"type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{"status":{}}}]}}
  creationTimestamp: "2024-10-25T14:45:34Z"
  generation: 1
  name: clusterextensions.olm.operatorframework.io
  resourceVersion: "831"
  uid: 596eb677-a7f2-48ac-936e-1c3a93f9a98e
spec:
  conversion:
    strategy: None
  group: olm.operatorframework.io
  names:
    kind: ClusterExtension
    listKind: ClusterExtensionList
    plural: clusterextensions
    singular: clusterextension
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClusterExtension is the Schema for the clusterextensions API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ClusterExtensionSpec defines the desired state of ClusterExtension
            properties:
              install:
                description: |-
                  install is a required field used to configure the installation options
                  for the ClusterExtension such as the installation namespace,
                  the service account and the pre-flight check configuration.

                  Below is a minimal example of an installation definition (in yaml):
                  install:
                     namespace: example-namespace
                     serviceAccount:
                       name: example-sa
                properties:
                  namespace:
                    description: |-
                      namespace is a reference to the Namespace in which the bundle of
                      content for the package referenced in the packageName field will be applied.
                      The bundle may contain cluster-scoped resources or resources that are
                      applied to other Namespaces. This Namespace is expected to exist.

                      namespace is required, immutable, and follows the DNS label standard
                      as defined in [RFC 1123]. This means that valid values:
                        - Contain no more than 63 characters
                        - Contain only lowercase alphanumeric characters or '-'
                        - Start with an alphanumeric character
                        - End with an alphanumeric character

                      Some examples of valid values are:
                        - some-namespace
                        - 123-namespace
                        - 1-namespace-2
                        - somenamespace

                      Some examples of invalid values are:
                        - -some-namespace
                        - some-namespace-
                        - thisisareallylongnamespacenamethatisgreaterthanthemaximumlength
                        - some.namespace

                      [RFC 1123]: https://tools.ietf.org/html/rfc1123
                    maxLength: 63
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                    x-kubernetes-validations:
                    - message: namespace is immutable
                      rule: self == oldSelf
                  preflight:
                    description: |-
                      preflight is an optional field that can be used to configure the preflight checks run before installation or upgrade of the content for the package specified in the packageName field.

                      When specified, it overrides the default configuration of the preflight checks that are required to execute successfully during an install/upgrade operation.

                      When not specified, the default configuration for each preflight check will be used.
                    properties:
                      crdUpgradeSafety:
                        description: |-
                          crdUpgradeSafety is used to configure the CRD Upgrade Safety pre-flight
                          checks that run prior to upgrades of installed content.

                          The CRD Upgrade Safety pre-flight check safeguards from unintended
                          consequences of upgrading a CRD, such as data loss.

                          This field is required if the spec.install.preflight field is specified.
                        properties:
                          policy:
                            default: Enabled
                            description: |-
                              policy is used to configure the state of the CRD Upgrade Safety pre-flight check.

                              This field is required when the spec.install.preflight.crdUpgradeSafety field is
                              specified.

                              Allowed values are ["Enabled", "Disabled"]. The default value is "Enabled".

                              When set to "Disabled", the CRD Upgrade Safety pre-flight check will be skipped
                              when performing an upgrade operation. This should be used with caution as
                              unintended consequences such as data loss can occur.

                              When set to "Enabled", the CRD Upgrade Safety pre-flight check will be run when
                              performing an upgrade operation.
                            enum:
                            - Enabled
                            - Disabled
                            type: string
                        required:
                        - policy
                        type: object
                    required:
                    - crdUpgradeSafety
                    type: object
                    x-kubernetes-validations:
                    - message: at least one of [crdUpgradeSafety] are required when
                        preflight is specified
                      rule: has(self.crdUpgradeSafety)
                  serviceAccount:
                    description: |-
                      serviceAccount is a required reference to a ServiceAccount that exists
                      in the installNamespace. The provided ServiceAccount is used to install and
                      manage the content for the package specified in the packageName field.

                      In order to successfully install and manage the content for the package,
                      the ServiceAccount provided via this field should be configured with the
                      appropriate permissions to perform the necessary operations on all the
                      resources that are included in the bundle of content being applied.
                    properties:
                      name:
                        description: |-
                          name is a required, immutable reference to the name of the ServiceAccount
                          to be used for installation and management of the content for the package
                          specified in the packageName field.

                          This ServiceAccount is expected to exist in the installNamespace.

                          This field follows the DNS subdomain name standard as defined in [RFC
                          1123]. This means that valid values:
                            - Contain no more than 253 characters
                            - Contain only lowercase alphanumeric characters, '-', or '.'
                            - Start with an alphanumeric character
                            - End with an alphanumeric character

                          Some examples of valid values are:
                            - some-serviceaccount
                            - 123-serviceaccount
                            - 1-serviceaccount-2
                            - someserviceaccount
                            - some.serviceaccount

                          Some examples of invalid values are:
                            - -some-serviceaccount
                            - some-serviceaccount-

                          [RFC 1123]: https://tools.ietf.org/html/rfc1123
                        maxLength: 253
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                        x-kubernetes-validations:
                        - message: name is immutable
                          rule: self == oldSelf
                    required:
                    - name
                    type: object
                required:
                - namespace
                - serviceAccount
                type: object
              source:
                description: |-
                  source is a required field which selects the installation source of content
                  for this ClusterExtension. Selection is performed by setting the sourceType.

                  Catalog is currently the only implemented sourceType, and setting the
                  sourcetype to "Catalog" requires the catalog field to also be defined.

                  Below is a minimal example of a source definition (in yaml):

                  source:
                    sourceType: Catalog
                    catalog:
                      packageName: example-package
                properties:
                  catalog:
                    description: |-
                      catalog is used to configure how information is sourced from a catalog. This field must be defined when sourceType is set to "Catalog",
                      and must be the only field defined for this sourceType.
                    properties:
                      channels:
                        description: |-
                          channels is an optional reference to a set of channels belonging to
                          the package specified in the packageName field.

                          A "channel" is a package author defined stream of updates for an extension.

                          When specified, it is used to constrain the set of installable bundles and
                          the automated upgrade path. This constraint is an AND operation with the
                          version field. For example:
                            - Given channel is set to "foo"
                            - Given version is set to ">=1.0.0, <1.5.0"
                            - Only bundles that exist in channel "foo" AND satisfy the version range comparison will be considered installable
                            - Automatic upgrades will be constrained to upgrade edges defined by the selected channel

                          When unspecified, upgrade edges across all channels will be used to identify valid automatic upgrade paths.

                          This field follows the DNS subdomain name standard as defined in [RFC
                          1123]. This means that valid entries:
                            - Contain no more than 253 characters
                            - Contain only lowercase alphanumeric characters, '-', or '.'
                            - Start with an alphanumeric character
                            - End with an alphanumeric character

                          Some examples of valid values are:
                            - 1.1.x
                            - alpha
                            - stable
                            - stable-v1
                            - v1-stable
                            - dev-preview
                            - preview
                            - community

                          Some examples of invalid values are:
                            - -some-channel
                            - some-channel-
                            - thisisareallylongchannelnamethatisgreaterthanthemaximumlength
                            - original_40
                            - --default-channel

                          [RFC 1123]: https://tools.ietf.org/html/rfc1123
                        items:
                          maxLength: 253
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        type: array
                      packageName:
                        description: |-
                          packageName is a reference to the name of the package to be installed
                          and is used to filter the content from catalogs.

                          This field is required, immutable and follows the DNS subdomain name
                          standard as defined in [RFC 1123]. This means that valid entries:
                            - Contain no more than 253 characters
                            - Contain only lowercase alphanumeric characters, '-', or '.'
                            - Start with an alphanumeric character
                            - End with an alphanumeric character

                          Some examples of valid values are:
                            - some-package
                            - 123-package
                            - 1-package-2
                            - somepackage

                          Some examples of invalid values are:
                            - -some-package
                            - some-package-
                            - thisisareallylongpackagenamethatisgreaterthanthemaximumlength
                            - some.package

                          [RFC 1123]: https://tools.ietf.org/html/rfc1123
                        maxLength: 253
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                        x-kubernetes-validations:
                        - message: packageName is immutable
                          rule: self == oldSelf
                      selector:
                        description: |-
                          selector is an optional field that can be used
                          to filter the set of ClusterCatalogs used in the bundle
                          selection process.

                          When unspecified, all ClusterCatalogs will be used in
                          the bundle selection process.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: |-
                                A label selector requirement is a selector that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: |-
                                    operator represents a key's relationship to a set of values.
                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: |-
                                    values is an array of string values. If the operator is In or NotIn,
                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                    the values array must be empty. This array is replaced during a strategic
                                    merge patch.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                      upgradeConstraintPolicy:
                        default: CatalogProvided
                        description: |-
                          upgradeConstraintPolicy is an optional field that controls whether
                          the upgrade path(s) defined in the catalog are enforced for the package
                          referenced in the packageName field.

                          Allowed values are: ["CatalogProvided", "SelfCertified"].

                          When this field is set to "CatalogProvided", automatic upgrades will only occur
                          when upgrade constraints specified by the package author are met.

                          When this field is set to "SelfCertified", the upgrade constraints specified by
                          the package author are ignored. This allows for upgrades and downgrades to
                          any version of the package. This is considered a dangerous operation as it
                          can lead to unknown and potentially disastrous outcomes, such as data
                          loss. It is assumed that users have independently verified changes when
                          using this option.

                          If unspecified, the default value is "CatalogProvided".
                        enum:
                        - CatalogProvided
                        - SelfCertified
                        type: string
                      version:
                        description: |-
                          version is an optional semver constraint (a specific version or range of versions). When unspecified, the latest version available will be installed.

                          Acceptable version ranges are no longer than 64 characters.
                          Version ranges are composed of comma- or space-delimited values and one or
                          more comparison operators, known as comparison strings. Additional
                          comparison strings can be added using the OR operator (||).

                          # Range Comparisons

                          To specify a version range, you can use a comparison string like ">=3.0,
                          <3.6". When specifying a range, automatic updates will occur within that
                          range. The example comparison string means "install any version greater than
                          or equal to 3.0.0 but less than 3.6.0.". It also states intent that if any
                          upgrades are available within the version range after initial installation,
                          those upgrades should be automatically performed.

                          # Pinned Versions

                          To specify an exact version to install you can use a version range that
                          "pins" to a specific version. When pinning to a specific version, no
                          automatic updates will occur. An example of a pinned version range is
                          "0.6.0", which means "only install version 0.6.0 and never
                          upgrade from this version".

                          # Basic Comparison Operators

                          The basic comparison operators and their meanings are:
                            - "=", equal (not aliased to an operator)
                            - "!=", not equal
                            - "<", less than
                            - ">", greater than
                            - ">=", greater than OR equal to
                            - "<=", less than OR equal to

                          # Wildcard Comparisons

                          You can use the "x", "X", and "*" characters as wildcard characters in all
                          comparison operations. Some examples of using the wildcard characters:
                            - "1.2.x", "1.2.X", and "1.2.*" is equivalent to ">=1.2.0, < 1.3.0"
                            - ">= 1.2.x", ">= 1.2.X", and ">= 1.2.*" is equivalent to ">= 1.2.0"
                            - "<= 2.x", "<= 2.X", and "<= 2.*" is equivalent to "< 3"
                            - "x", "X", and "*" is equivalent to ">= 0.0.0"

                          # Patch Release Comparisons

                          When you want to specify a minor version up to the next major version you
                          can use the "~" character to perform patch comparisons. Some examples:
                            - "~1.2.3" is equivalent to ">=1.2.3, <1.3.0"
                            - "~1" and "~1.x" is equivalent to ">=1, <2"
                            - "~2.3" is equivalent to ">=2.3, <2.4"
                            - "~1.2.x" is equivalent to ">=1.2.0, <1.3.0"

                          # Major Release Comparisons

                          You can use the "^" character to make major release comparisons after a
                          stable 1.0.0 version is published. If there is no stable version published, // minor versions define the stability level. Some examples:
                            - "^1.2.3" is equivalent to ">=1.2.3, <2.0.0"
                            - "^1.2.x" is equivalent to ">=1.2.0, <2.0.0"
                            - "^2.3" is equivalent to ">=2.3, <3"
                            - "^2.x" is equivalent to ">=2.0.0, <3"
                            - "^0.2.3" is equivalent to ">=0.2.3, <0.3.0"
                            - "^0.2" is equivalent to ">=0.2.0, <0.3.0"
                            - "^0.0.3" is equvalent to ">=0.0.3, <0.0.4"
                            - "^0.0" is equivalent to ">=0.0.0, <0.1.0"
                            - "^0" is equivalent to ">=0.0.0, <1.0.0"

                          # OR Comparisons
                          You can use the "||" character to represent an OR operation in the version
                          range. Some examples:
                            - ">=1.2.3, <2.0.0 || >3.0.0"
                            - "^0 || ^3 || ^5"

                          For more information on semver, please see https://semver.org/
                        maxLength: 64
                        pattern: ^(\s*(=||!=|>|<|>=|=>|<=|=<|~|~>|\^)\s*(v?(0|[1-9]\d*|[x|X|\*])(\.(0|[1-9]\d*|x|X|\*]))?(\.(0|[1-9]\d*|x|X|\*))?(-([0-9A-Za-z\-]+(\.[0-9A-Za-z\-]+)*))?(\+([0-9A-Za-z\-]+(\.[0-9A-Za-z\-]+)*))?)\s*)((?:\s+|,\s*|\s*\|\|\s*)(=||!=|>|<|>=|=>|<=|=<|~|~>|\^)\s*(v?(0|[1-9]\d*|x|X|\*])(\.(0|[1-9]\d*|x|X|\*))?(\.(0|[1-9]\d*|x|X|\*]))?(-([0-9A-Za-z\-]+(\.[0-9A-Za-z\-]+)*))?(\+([0-9A-Za-z\-]+(\.[0-9A-Za-z\-]+)*))?)\s*)*$
                        type: string
                    required:
                    - packageName
                    type: object
                  sourceType:
                    description: |-
                      sourceType is a required reference to the type of install source.

                      Allowed values are ["Catalog"]

                      When this field is set to "Catalog", information for determining the appropriate
                      bundle of content to install will be fetched from ClusterCatalog resources existing
                      on the cluster. When using the Catalog sourceType, the catalog field must also be set.
                    enum:
                    - Catalog
                    type: string
                required:
                - sourceType
                type: object
                x-kubernetes-validations:
                - message: sourceType Catalog requires catalog field
                  rule: self.sourceType == 'Catalog' && has(self.catalog)
            required:
            - install
            - source
            type: object
          status:
            description: ClusterExtensionStatus defines the observed state of ClusterExtension.
            properties:
              conditions:
                description: |-
                  conditions is a representation of the current state for this ClusterExtension.
                  The status is represented by a set of "conditions".

                  Each condition is generally structured in the following format:
                    - Type: a string representation of the condition type. More or less the condition "name".
                    - Status: a string representation of the state of the condition. Can be one of ["True", "False", "Unknown"].
                    - Reason: a string representation of the reason for the current state of the condition. Typically useful for building automation around particular Type+Reason combinations.
                    - Message: a human readable message that further elaborates on the state of the condition

                  The global set of condition types are:
                    - "Installed", represents whether or not the a bundle has been installed for this ClusterExtension
                    - "Progressing", represents whether or not the ClusterExtension is progressing towards a new state

                  When the ClusterExtension is sourced from a catalog, the following conditions are also possible:
                    - "Deprecated", represents an aggregation of the PackageDeprecated, ChannelDeprecated, and BundleDeprecated condition types
                    - "PackageDeprecated", represents whether or not the package specified in the spec.source.catalog.packageName field has been deprecated
                    - "ChannelDeprecated", represents whether or not any channel specified in spec.source.catalog.channels has been deprecated
                    - "BundleDeprecated", represents whether or not the installed bundle is deprecated

                  The current set of reasons are:
                    - "Succeeded", this reason is set on the "Installed" and "Progressing" conditions when initial installation and progressing to a new state is successful
                    - "Failed", this reason is set on the "Installed" condition when an error has occurred while performing the initial installation.
                    - "Blocked", this reason is set on the "Progressing" condition when the ClusterExtension controller has encountered an error that requires manual intervention for recovery
                    - "Retrying", this reason is set on the "Progressing" condition when the ClusterExtension controller has encountered an error that could be resolved on subsequent reconciliation attempts
                    - "Deprecated", this reason is set on the "Deprecated", "PackageDeprecated", "ChannelDeprecated", and "BundleDeprecated" conditions to signal that the installed package has been deprecated at the particular scope
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              install:
                properties:
                  bundle:
                    description: |-
                      bundle is a representation of the currently installed bundle.

                      A "bundle" is a versioned set of content that represents the resources that
                      need to be applied to a cluster to install a package.
                    properties:
                      name:
                        description: |-
                          name is a required field and is a reference
                          to the name of a bundle
                        type: string
                      version:
                        description: |-
                          version is a required field and is a reference
                          to the version that this bundle represents
                        type: string
                    required:
                    - name
                    - version
                    type: object
                required:
                - bundle
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ClusterExtension
    listKind: ClusterExtensionList
    plural: clusterextensions
    singular: clusterextension
  conditions:
  - lastTransitionTime: "2024-10-25T14:45:34Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-10-25T14:45:34Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1alpha1
